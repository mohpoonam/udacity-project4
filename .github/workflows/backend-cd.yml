name: Backend Continuous Deployment
on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
    branches:
      - 'main'
jobs:
  LINT:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: starter/backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3    
    - name: Install pipenv
      run: pip install pipenv
    - name: Install dependencies
      run: pipenv install --dev
    - name: Run lint
      run: |
        pipenv run lint
  TEST:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: starter/backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3    
    - name: Install pipenv
      run: pip install pipenv
    - name: Install dependencies
      run: pipenv install --dev
    - name: Test with pytest
      run: |
        pipenv run test
  BUILD:
    runs-on: ubuntu-latest
    needs: [LINT, TEST]
    defaults:
      run:
        shell: bash
        working-directory: starter/backend
    env:        
        AWS_REGION: us-east-1
    steps:
    - name: Checkout code
      uses: actions/checkout@v3    
    - 
      name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: $AWS_REGION
    - 
      name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - 
      name: Push docker image to Amazon ECR
      env:
        AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: backend
      run: |
          docker build -t $AWS_ECR_REGISTRY/$REPOSITORY:${GITHUB_SHA::7} .
          docker push $AWS_ECR_REGISTRY/$REPOSITORY:${GITHUB_SHA::7}
    - 
      name: Kubeconfig Auth     
      run: |
          aws eks update-kubeconfig --name cluster --region $AWS_REGION

    - name: Deploy to Kubernetes
      env:
        AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: backend
      run: |
        kustomize edit set image frontend=$AWS_ECR_REGISTRY/$REPOSITORY:${GITHUB_SHA::7}
        kustomize build | kubectl apply -f -       
